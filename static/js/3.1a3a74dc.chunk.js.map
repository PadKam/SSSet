{"version":3,"sources":["Component/Profile/Profile.module.css","Component/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/space.png","Component/Profile/MyPosts/MyPosts.module.css","Component/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Component/Profile/ProfileInfo/ProfileStatusWithHooks.js","Component/Profile/ProfileInfo/ProfileInfo.js","Component/Profile/MyPosts/Post/Post.js","Component/Profile/MyPosts/MyPosts.js","Component/Profile/MyPosts/MyPostsContainer.js","Component/Profile/Profile.js","Component/Profile/ProfileContainer.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","textStatus","setTextStatus","useEffect","onDoubleClick","userId","authUserId","onBlur","updateStatusThunkCreate","onChange","e","currentTarget","autoFocus","ProfileInfo","profile","className","s","imgHeader","src","space","discriptionBlock","imgUser","photos","small","userIcon","profileUser","fullName","aboutMe","lookingForAJobDescription","vk","facebook","Post","item","message","licCount","MyPosts","postsElement","postsDate","map","post","lic","key","id","postBlock","newPost","updateNewPostTextActionCreator","target","newPostText","onClick","addPostActionCreator","posts","MyPostsContainer","connect","state","profilePage","dispatch","text","Profile","user","ProfileContainer","this","match","params","isAuth","getProfileThunkCreate","getStatusThunkCreate","React","Component","compose","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.1a3a74dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Profile_user__i_3gE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgHeader\":\"ProfileInfo_imgHeader__2Mm3m\",\"imgUser\":\"ProfileInfo_imgUser__buNVm\",\"discriptionBlock\":\"ProfileInfo_discriptionBlock__2aGLc\",\"profileUser\":\"ProfileInfo_profileUser__1032E\"};","module.exports = __webpack_public_path__ + \"static/media/space.12a6cb87.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__11zE8\",\"posts\":\"MyPosts_posts__3nVqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__C7d7z\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(true);\r\n    let [textStatus,setTextStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        //if(editMode)\r\n            setTextStatus(props.status)\r\n    },[props.status])\r\n    const activateEditMode = () => {\r\n        if (props.userId == props.authUserId)\r\n            setEditMode(false)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        props.updateStatusThunkCreate(textStatus);\r\n        setEditMode(true)\r\n    }\r\n    const changeStatus = (e) => {\r\n        setTextStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? (\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>Статус: {props.status}</span>\r\n                    </div>\r\n                )\r\n                : (\r\n                    <div>\r\n                        <input onBlur={deactivateEditMode} onChange={changeStatus} value={textStatus} autoFocus={true}></input>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport space from './../../../assets/images/space.png'\r\nimport PreoladerComp from \"../../Common/Preloader/Preloader\";\r\nimport userIcon from './../../../assets/images/userIcon.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <PreoladerComp/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.imgHeader}>\r\n                <img src={space}></img>\r\n            </div>\r\n            <div className={s.discriptionBlock}>\r\n                <div className={s.imgUser}>\r\n                    <img src={props.profile.photos.small ? props.profile.photos.small : userIcon}></img>\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks userId={props.profile.userId}\r\n                                            authUserId={props.authUserId}\r\n                                            status={props.status}\r\n                                            updateStatusThunkCreate={props.updateStatusThunkCreate}/>\r\n                </div>\r\n                <div className={s.profileUser}>\r\n                    <div>Меня зовут: {props.profile.fullName}</div>\r\n                    <div>Обомне: {props.profile.aboutMe}</div>\r\n                    <div>Работа: {props.profile.lookingForAJobDescription}</div>\r\n                    <div>Контакты:</div>\r\n                    <div>vk: {props.profile.vk}</div>\r\n                    <div>facebook: {props.profile.facebook}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://pbs.twimg.com/media/D8r-PBWWsAEXTfK.jpg'></img>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.licCount}</span>\r\n                <span>DisLike</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.postsDate.map(post => <Post message={post.post} licCount={post.lic} key = {post.id}/>);\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>My post</h3>\r\n            <div className={s.newPost}>\r\n                <div>\r\n                    <textarea onChange={(e)=>props.updateNewPostTextActionCreator(e.target.value)} value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button className={\"buttonAddPost\"} onClick={()=>props.addPostActionCreator()}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../Redux/profile-Reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps= (state) =>{\r\n    return{\r\n        postsDate: state.profilePage.postsDate,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPostActionCreator: () => {dispatch(addPostActionCreator())},\r\n        updateNewPostTextActionCreator: (text) => {dispatch(updateNewPostTextActionCreator(text))}\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.user}>\r\n            <ProfileInfo profile = {props.profile}\r\n                         authUserId = {props.authUserId}\r\n                         status = {props.status}\r\n                         updateStatusThunkCreate = {props.updateStatusThunkCreate}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunkCreate, getStatusThunkCreate, updateStatusThunkCreate} from \"../../Redux/profile-Reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = 2;\r\n        if (this.props.match.params.userId)\r\n            userId = this.props.match.params.userId;\r\n        else if (this.props.isAuth)\r\n            userId = this.props.authUserId;\r\n\r\n        this.props.getProfileThunkCreate(userId);\r\n        this.props.getStatusThunkCreate(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     status={this.props.status}\r\n                     profile={this.props.profile}\r\n                     updateStatusThunkCreate={this.props.updateStatusThunkCreate}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n/*let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\nlet withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nconst FindUserProfile = connect(mapStateToProps, {\r\n    getProfileThunkCreate\r\n})(withUrlDataContainerComponent);*/\r\n\r\n/*обертка в connect дляпередачи и отрисовки\r\nобертка в withRouter для возврата math в котором содержится параметры URL\r\nобертка в withAuthRedirect для перенаправления на страницу Авторизации если не авторизован\r\n */\r\n/*const FindUserProfile = connect(mapStateToProps, {\r\n    getProfileThunkCreate\r\n})(withRouter(withAuthRedirect(ProfileContainer)));*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfileThunkCreate, getStatusThunkCreate, updateStatusThunkCreate}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}