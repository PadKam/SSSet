{"version":3,"sources":["Component/Dialogs/Dialogs.module.css","Component/Dialogs/Message/Message.module.css","Component/Dialogs/DialogItem/DialogsItem.module.css","Component/Dialogs/Message/Message.js","Component/Dialogs/DialogItem/DialogsItem.js","Utils/Validators/validators.js","Component/Dialogs/Dialogs.js","Component/Dialogs/DialogsContainer.js"],"names":["module","exports","Message","props","className","s","message","idUser","iKing","Holop","src","imgAvatarUrl","DialogItem","path","id","dialog","active","to","name","requiredField","value","maxLength","length","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","Dialogs","dialogElements","messagesPage","dialogsDate","map","key","messagesElements","messagesDate","dialogs","dialogsItems","messages","newMessage","formData","console","log","addMessageActionCreator","compose","connect","state","dispatch","text","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,oBCAvLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,MAAQ,yB,oBCA5FD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,8B,gGCUjDC,EARC,SAACC,GACb,OACI,yBAAKC,UAAS,UAAKC,IAAEC,QAAP,YAAkC,GAAhBH,EAAMI,OAAcF,IAAEG,MAAQH,IAAEI,QAC5D,yBAAKC,IAAKP,EAAMQ,eACfR,EAAMG,U,yBCQJM,EAVI,SAACT,GAChB,IAAIU,EAAO,YAAcV,EAAMW,GAC/B,OACI,yBAAKV,UAAS,UAAKC,IAAEU,OAAP,YAAiBV,IAAEW,SAC7B,yBAAKN,IAAKP,EAAMQ,eAChB,kBAAC,IAAD,CAASM,GAAIJ,GAAOV,EAAMe,Q,kBCVzBC,EAAgB,SAACC,GAC1B,OAAGA,OACC,EAEO,qB,QCKTC,EDHyC,SAACD,GAC5C,OAAGA,GAASA,EAAME,OAAO,GACd,qBAEP,GCyCFC,EAAmBC,YAAU,CAC/BC,KAAK,iBADgBD,EAbL,SAACrB,GACjB,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAa,UAAWX,KAAM,UAAWY,UAAWC,IAAUC,SAAW,CAACb,EAAcE,MAEnG,6BACI,4CAUDY,EA5CC,SAAC9B,GACb,IAAI+B,EAAiB/B,EAAMgC,aAAaC,YAAYC,KAAI,SAAAtB,GAAM,OAAI,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMJ,GAAIC,EAAOD,GACrCH,aAAcI,EAAOJ,aAAc2B,IAAOvB,EAAOD,QACpHyB,EAAmBpC,EAAMgC,aAAaK,aAAaH,KAAI,SAAA/B,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QACxBC,OAAQD,EAAQC,OAChBI,aAAcL,EAAQK,aAAc2B,IAAOhC,EAAQQ,QAO3H,OACI,yBAAKV,UAAWC,IAAEoC,SACd,yBAAKrC,UAAWC,IAAEqC,cACbR,GAEL,yBAAK9B,UAAWC,IAAEsC,UACbJ,GAEL,yBAAKnC,UAAWC,IAAEuC,YACd,kBAACrB,EAAD,CAAkBG,SAdb,SAACmB,GACdC,QAAQC,IAAIF,GACZ1C,EAAM6C,wBAAwBH,EAASvC,e,8BCEhC2C,sBACXC,aAhBiB,SAACC,GAClB,MAAM,CACFhB,aAAcgB,EAAMhB,iBAIH,SAACiB,GACtB,MAAM,CACFJ,wBAAyB,SAACK,GAAUD,EAASJ,YAAwBK,SASzEC,IAFWL,CAGbhB","file":"static/js/4.64947c95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2G9z8\",\"dialogsItems\":\"Dialogs_dialogsItems__3RQUn\",\"messages\":\"Dialogs_messages__1fhRg\",\"message\":\"Dialogs_message__3cRk7\",\"newMessage\":\"Dialogs_newMessage__24rM7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2cmFV\",\"iKing\":\"Message_iKing__25yRc\",\"Holop\":\"Message_Holop__q8FCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__3IRNy\",\"active\":\"DialogsItem_active__3g4lF\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={`${s.message} ${props.idUser == 1 ? s.iKing : s.Holop}`}>\r\n            <img src={props.imgAvatarUrl}></img>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport s from './DialogsItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return(\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <img src={props.imgAvatarUrl}></img>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","export const requiredField = (value) =>{\r\n    if(value)\r\n        return undefined\r\n    else\r\n        return 'Field is required'\r\n}\r\nexport const maxLengthCreater = (maxLength) => (value) =>{\r\n    if(value && value.length>30)\r\n        return 'Max length 30'\r\n    else\r\n        return undefined\r\n}","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreater, requiredField} from \"../../Utils/Validators/validators\";\r\nimport {Textarea} from \"../Common/FormsControl/FormsControl\";\r\n\r\n\r\nconst maxLength = maxLengthCreater(10);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.messagesPage.dialogsDate.map(dialog => <DialogItem name={dialog.name} id={dialog.id}\r\n                                                                           imgAvatarUrl={dialog.imgAvatarUrl} key = {dialog.id}/>);\r\n    let messagesElements = props.messagesPage.messagesDate.map(message => <Message message={message.message}\r\n                                                                            idUser={message.idUser}\r\n                                                                            imgAvatarUrl={message.imgAvatarUrl} key = {message.id}/>);\r\n\r\n    const onSubmit = (formData) =>{\r\n        console.log(formData)\r\n        props.addMessageActionCreator(formData.message)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n            <div className={s.newMessage}>\r\n                <MessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessageForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"message\"} name={\"message\"} component={Textarea} validate ={[requiredField,maxLength]} />\r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n        )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({\r\n    form:\"dialogMessage\"\r\n})(MessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {addMessageActionCreator} from \"../../Redux/messages-Reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps= (state) =>{\r\n    return{\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addMessageActionCreator: (text) => {dispatch(addMessageActionCreator(text))}\r\n    }\r\n}\r\n\r\n//let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n//const DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(withAuthRedirect(Dialogs));\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}